postgresql:
  enabled: false

image:
  repository: quay.io/keycloak/keycloak
  tag: "21.0"
  pullPolicy: IfNotPresent

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "128m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
  rules:
    - host: sso.common.merlot-education.eu
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts:
        - sso.common.merlot-education.eu
      secretName: keycloak-certificate

serviceAccount:
  create: true
  name: keycloak

command: ["/bin/sh", "-c"]
args:
  - source /vault/secrets/db;
    source /vault/secrets/admin;
    /opt/keycloak/bin/kc.sh start-dev;

extraEnv: |
  - name: "KC_HOSTNAME"
    value: "sso.common.merlot-education.eu"
  - name: "KC_PROXY"
    value: "edge"
  - name: "KEYCLOAK_PROXY_ADDRESS_FORWARDING"
    value: "true"

podAnnotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/tls-skip-verify: "true"
  vault.hashicorp.com/role: "keycloak"
  vault.hashicorp.com/agent-inject-secret-db: "secrets/keycloak/database"
  vault.hashicorp.com/agent-inject-template-db: |
    {{`
    {{- with secret "secrets/keycloak/database" -}}
    export KC_DB="postgres"
    export KC_DB_PASSWORD="{{ .Data.password }}"
    export KC_DB_USERNAME="{{ .Data.username }}"
    export KC_DB_URL="jdbc:postgresql://{{ .Data.host }}/{{ .Data.database }}"
    {{- end }}
    `}}
  vault.hashicorp.com/agent-inject-secret-admin: "secrets/keycloak/admin"
  vault.hashicorp.com/agent-inject-template-admin: |
    {{`
    {{- with secret "secrets/keycloak/admin" -}}
    export KEYCLOAK_ADMIN={{ .Data.username }}
    export KEYCLOAK_ADMIN_PASSWORD={{ .Data.password }}
    {{- end }}
    `}}

# Liveness probe configuration
livenessProbe: |
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 0
  timeoutSeconds: 5

# Readiness probe configuration
readinessProbe: |
  httpGet:
    path: /realms/master
    port: http
  initialDelaySeconds: 30
  timeoutSeconds: 1

# Startup probe configuration
startupProbe: |
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  timeoutSeconds: 1
  failureThreshold: 60
  periodSeconds: 5
